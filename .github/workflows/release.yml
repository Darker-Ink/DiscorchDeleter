name: Release Script

on:
  push:
    branches:
      - master
    paths:
      - 'tampermonkey.config.json'

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check-version.outputs.version_changed }}
      new_version: ${{ steps.check-version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for version change in tampermonkey.config.json
        id: check-version
        run: |
          CURRENT_VERSION=$(jq -r '.version' tampermonkey.config.json)
          echo "Current version is $CURRENT_VERSION"
          
          if git cat-file -e HEAD~1:tampermonkey.config.json 2>/dev/null; then
            git show HEAD~1:tampermonkey.config.json > previous_config.json
            PREVIOUS_VERSION=$(jq -r '.version' previous_config.json)
            echo "Previous version was $PREVIOUS_VERSION"
            
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
              echo "version_changed=true" >> $GITHUB_OUTPUT
              echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
              echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            else
              echo "version_changed=false" >> $GITHUB_OUTPUT
              echo "Version unchanged"
            fi
            rm previous_config.json # Clean up
          else
            echo "Previous tampermonkey.config.json not found or this is the first commit with it."
            echo "Assuming version changed for initial release."
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "new_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    needs: check-version-change
    if: needs.check-version-change.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build script
        run: npm run build

      - name: Get script name
        id: script-name
        run: |
          SCRIPT_PATH=$(ls dist/*.user.js | head -n1)
          if [ -z "$SCRIPT_PATH" ]; then
            echo "Error: No .user.js file found in dist/ directory."
            exit 1
          fi
          echo "script_path=$SCRIPT_PATH" >> $GITHUB_OUTPUT
          echo "script_filename=$(basename $SCRIPT_PATH)" >> $GITHUB_OUTPUT
          echo "Found script: $SCRIPT_PATH"
          
      - name: Get commit history
        id: get-commits
        run: |
          PREVIOUS_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          
          echo "Previous tag: ${PREVIOUS_TAG:-none}"
          
          if [ -n "$PREVIOUS_TAG" ]; then
            COMMIT_LOG=$(git log --pretty=format:"@%an [%h](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/%H): %s" ${PREVIOUS_TAG}..HEAD)
          else
            COMMIT_LOG=$(git log --pretty=format:"@%an [%h](${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/%H): %s" -n 10)
          fi
          
          COMMIT_LOG="${COMMIT_LOG//'%'/'%25'}"
          COMMIT_LOG="${COMMIT_LOG//$'\n'/'%0A'}"
          COMMIT_LOG="${COMMIT_LOG//$'\r'/'%0D'}"
          
          echo "commit_log=$COMMIT_LOG" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-version-change.outputs.new_version }}
          name: Release v${{ needs.check-version-change.outputs.new_version }}
          body: |
            # Release v${{ needs.check-version-change.outputs.new_version }}
            
            **Installation**
            1. Install [Tampermonkey](https://www.tampermonkey.net/) extension for your browser
            2. Install [Vencord](https://vencord.dev/download/)'s tampermonkey script
            3. Click the "discorchdeleter.user.js" file below to install this script
            
            **What's Changed**
            
            <details>
              <summary>Changes since last release</summary>
              
              ${{ steps.get-commits.outputs.commit_log }}
            </details>
          files: ${{ steps.script-name.outputs.script_path }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
